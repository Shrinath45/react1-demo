Client => Request => Web Server => HttpHandler => Routing Engine => Route Table

Client => Request => Form Browser => DOMContentLoaded => Index.html => Static DOM => Index.js => Loads React Library => Compiler Library [Babel] = > Load Dependencies => Loads Component => Dynamic DOM

    "Bootstrapping"

    Static DOM => Dynamic DOM

FAQ: How a class component can be controlled?
ANS: By using "props". Every class component have built in props.
    Props is object type and accessible using "this".


Syntax:
        this.props.key

        this.props = {
            key: value
        }

EX:
1. Add a new file into controlled-component folder

data-card.jsx

import React from "react";


export class DataCard extends React.Component
{
    constructor(){
        super();
    }

    render(){
        return(
            <div className="card p-2" style={{width:'200px'}}>
                <div className="card-title h3 bg-danger text-white p-2">
                    {this.props.cardTitle}
                </div>

                <div className="card-body">
                    <ol>
                    {
                        this.props.items.map(item=> <li key={item}>{item}</li>)
                    }
                    </ol>
                </div>
            </div>
        )
    }
}


2. Demo-component.jsx

import React from "react";
import { DataCard } from "../controlled-somponent/data-card";
export class DemoComponent extends React.PureComponent
{
    constructor(){
        super();
        this.state = {
            
        }
    }

   

    render(){
        return(
            <div className="container-fluid">
                <h2>Product Details</h2>
              <DataCard cardTitle='Samsung TV' items={['LED', 'QLED', 'OLED']}/>
            </div>
        )
    }
}


                                React MUI
                              [ Material UI ]

- It is a Material UI library for React Applications.
- It provides various products for building interactive and responsive UI.

a) MUI Core     : It is library of controlled component, with built-in functionality.

b) MUI X        : It is library of various use cases required for implementing different functionalities.

c) Toolpad      : It is a library for various plugins required for React App.

d) Templates    : It provides pre-defied application template for various domains.

e) Design Kits  : It provides toolkit for UX. [UX is nothing but the plan to design a component]









